
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Authenticated users can read any user profile (e.g., for AuthContext owner check)
    // - Users can create their own profile
    // - Users can update their own profile (but not their role directly via this rule)
    // - Owners can update any user profile (except making someone else an owner)
    // - Admins can update employee profiles or demote other admins (but not manage owners or promote to admin)
    // - Only owners can delete other user profiles (not themselves)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId ||
                       (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner' && request.resource.data.role != 'owner') ||
                       (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' && resource.data.role != 'owner' && request.resource.data.role != 'admin' && !(data.role == 'admin' && resource.data.role == 'admin' && request.auth.uid != userId) );
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner' && request.auth.uid != userId;
    }

    // Categories Collection
    // - All authenticated users can read categories.
    // - Owner, Admin, or Employee can write (create, update, delete) categories.
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Products Collection
    // - All authenticated users can read products.
    // - Owner, Admin, or Employee can write products.
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Customers Collection
    // - All authenticated users can read customers.
    // - Owner, Admin, or Employee can write customers.
    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Orders Collection
    // - All authenticated users can read orders.
    // - Owner, Admin, or Employee can create orders.
    // - Only Owner can update orders.
    // - Only Owner can delete orders (generally not recommended, but rule is here).
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
    }
  }
}
