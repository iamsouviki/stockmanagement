
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    // - Authenticated users can read any user's profile (e.g., for AuthContext owner check, or future features)
    // - A user can create their own profile document upon sign up.
    // - A user can update their own profile (except their role).
    // - Only 'owner' can delete user profiles (excluding their own, and other owners).
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId
                      && !('role' in request.resource.data && request.resource.data.role != resource.data.role); // Prevent self-role change
      // More granular delete (e.g., owner can delete non-owners) can be added if needed.
      // Simple delete for now by owner, except self.
      allow delete: if request.auth != null
                      && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner'
                      && request.auth.uid != userId;
    }

    // Categories collection
    // - All authenticated users can read categories.
    // - Owner, Admin, and Employee can create, update, delete categories.
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Products collection
    // - All authenticated users can read products.
    // - Owner, Admin, and Employee can create, update, delete products.
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Customers collection
    // - All authenticated users can read customers.
    // - Owner, Admin, and Employee can create, update, delete customers.
    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Orders collection
    // - All authenticated users can read orders (for history).
    // - Creating orders (billing) is allowed for Owner, Admin, and Employee.
    // - Only 'owner' can update existing orders.
    // - Deletion of orders is generally restricted (set to false, can be changed if needed).
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
      allow update: if request.auth != null &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
      allow delete: if false; // Typically, orders are not deleted.
    }
  }
}
