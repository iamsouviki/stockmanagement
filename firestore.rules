
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Authenticated users can read their own profile.
    // - Authenticated users can list users (e.g., for AuthContext owner check, or user management page if allowed by UI).
    // - Users can create their own profile document upon signup (UID must match).
    // - Users can update their own profile (excluding role, unless an owner/admin logic is implemented server-side or via specific rules).
    // - Only owners can delete user profiles (excluding their own, handled by client logic).
    match /users/{userId} {
      allow read: if request.auth != null; // Allows get and list for authenticated users
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && !(request.resource.data.role is string && request.resource.data.role != resource.data.role && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role != 'owner' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role != 'admin'  ) ; // User can update their own, but not change their role unless they are owner/admin
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner' && request.auth.uid != userId;
    }

    // Categories Collection
    // - All authenticated users can read categories.
    // - Owner, Admin, Employee can create, update, delete categories.
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Products Collection
    // - All authenticated users can read products.
    // - Owner, Admin, Employee can create, update, delete products.
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Customers Collection
    // - All authenticated users can read customers.
    // - Owner, Admin, Employee can create, update, delete customers.
    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Orders Collection
    // - All authenticated users can read orders (for history).
    // - Owner, Admin, Employee can create orders.
    // - Only Owner can update orders.
    // - Deletion of orders is typically disallowed or restricted to Owners for specific cleanup.
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner'; // Or 'false' if deletion is not allowed
    }
  }
}
