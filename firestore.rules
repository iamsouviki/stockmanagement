
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get user role
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Users collection
    // - Authenticated users can read their own profile.
    // - Authenticated users can create their own profile document upon signup (often done by AuthProvider).
    // - Authenticated users can update their own profile (except for the role).
    // - Only 'owner' can delete user profiles (excluding their own).
    // - Authenticated users can list/query users (needed for AuthContext owner check and user management page).
    match /users/{userId} {
      allow read: if isAuthenticated(); // Allows AuthContext owner check and user listing for User Management
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId && !(request.resource.data.role != resource.data.role && getUserRole(request.auth.uid) != 'owner' && request.resource.data.role == 'owner'); // Non-owners cannot make someone an owner
      allow delete: if isAuthenticated() && getUserRole(request.auth.uid) == 'owner' && request.auth.uid != userId;
    }

    // Categories collection
    // - All authenticated users can read categories.
    // - 'owner', 'admin', 'employee' can create, update, delete categories.
    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && getUserRole(request.auth.uid) in ['owner', 'admin', 'employee'];
    }

    // Products collection
    // - All authenticated users can read products.
    // - 'owner', 'admin', 'employee' can create, update, delete products.
    match /products/{productId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && getUserRole(request.auth.uid) in ['owner', 'admin', 'employee'];
    }

    // Customers collection
    // - All authenticated users can read customers.
    // - 'owner', 'admin', 'employee' can create, update, delete customers.
    match /customers/{customerId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && getUserRole(request.auth.uid) in ['owner', 'admin', 'employee'];
    }

    // Orders collection
    // - All authenticated users can read orders (for history).
    // - 'owner', 'admin', 'employee' can create orders (billing).
    // - Only 'owner' can update existing orders.
    // - Deletion of orders is generally disallowed (set to false or restricted to owner if absolutely necessary).
    match /orders/{orderId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && getUserRole(request.auth.uid) in ['owner', 'admin', 'employee'];
      allow update: if isAuthenticated() && getUserRole(request.auth.uid) == 'owner';
      allow delete: if isAuthenticated() && getUserRole(request.auth.uid) == 'owner'; // Or set to false
    }
  }
}
