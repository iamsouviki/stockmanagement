
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Authenticated users can read any user's profile (to check roles, display names etc.)
    // - A user can create their own profile document (typically done once upon sign-up).
    // - A user can update their own profile document.
    // - Only owners can delete user profiles (a sensitive operation).
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
    }

    // Categories Collection
    // - Authenticated users can read categories.
    // - 'owner', 'admin', or 'employee' can write (create, update, delete) categories.
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Products Collection
    // - Authenticated users can read products.
    // - 'owner', 'admin', or 'employee' can write products.
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Customers Collection
    // - Authenticated users can read customer data.
    // - 'owner', 'admin', or 'employee' can write customer data.
    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
    }

    // Orders Collection
    // - Authenticated users can read orders.
    // - 'owner', 'admin', or 'employee' can create orders.
    // - Only 'owner' can update orders.
    // - Deletion of orders is generally disallowed (set to false).
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'admin', 'employee'];
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
      allow delete: if false; // Explicitly disallow deletion of orders
    }
  }
}
