
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Authenticated users can read their own profile.
    // - Authenticated users can list/query users (needed for AuthContext owner check, can be tightened later if necessary).
    // - Only users themselves can create their profile (typically done once).
    // - Users can update their own profile (e.g., displayName, mobileNumber).
    // - Only owners can delete user profiles (Firestore profile only, Auth account deletion is separate).
    // - Role changes are restricted.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && !(request.resource.data.role is string && request.resource.data.role != resource.data.role); // User cannot change their own role
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner' && request.auth.uid != userId;
    }

    // Function to check if the acting user has a specific role or is an owner
    function hasRole(roles) {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in roles;
    }
    function isOwner() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'owner';
    }
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isEmployee() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employee';
    }

    // Categories Collection
    // - Authenticated users can read categories.
    // - Owners, Admins, and Employees can write (create, update, delete) categories.
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if hasRole(['owner', 'admin', 'employee']);
    }

    // Products Collection
    // - Authenticated users can read products.
    // - Owners, Admins, and Employees can write products.
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if hasRole(['owner', 'admin', 'employee']);
    }

    // Customers Collection
    // - Authenticated users can read customers.
    // - Owners, Admins, and Employees can write customers.
    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow write: if hasRole(['owner', 'admin', 'employee']);
    }

    // Orders Collection
    // - Authenticated users can read orders (for their history or general listing).
    // - Owners, Admins, and Employees can create orders.
    // - Only Owners can update orders.
    // - Deletion of orders is generally disallowed (set to 'false' for safety, can be changed to owner-only if needed).
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow create: if hasRole(['owner', 'admin', 'employee']);
      allow update: if isOwner();
      allow delete: if isOwner(); // Or set to false if deletion should be disallowed
    }
  }
}
